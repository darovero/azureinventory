trigger:
- none

pool:
  vmImage: 'windows-latest'

parameters:
- name: resourcegroup
  displayName: 'Resource Group Name'
  type: string
- name: environment
  displayName: 'Environment'
  type: string
  values:
  - 'Non-Prod'
  - 'Prod'
- name: tagsToFilter
  displayName: 'Tags to Filter'
  type: string
  default: 'owner,deploymentid'
- name: ContainerFolder
  default: "Inventory"

variables:
  - group: ${{ parameters.environment }}

steps:
- template: Modules/azurepowershell.yaml

- script: |
    Install-Module -Name PowerShellGet -Force -AllowClobber -Scope CurrentUser
    Install-Package -Name powershell -Force -AllowClobber -Scope CurrentUser -Repository PSGallery
    powershell -File '$(Build.SourcesDirectory)/Scripts/az_inventory.ps1' -ResourceGroup $(resourceGroup) -TagsToFilter $(tagsToFilter)
  displayName: 'Run PowerShell Script'


- task: AzurePowerShell@5
  displayName: 'Upload Inventory to Azure Blob Storage'
  inputs:
    azureSubscription: $(azureSubscription)
    ScriptType: 'InlineScript'
    Inline: |
      $sourceFilePath = 'Resources_${{parameters.resourcegroup}}.csv'
      $destinationBlobName = '${{parameters.ContainerFolder}}/Resources_${{parameters.resourcegroup}}.csv'
      
      $storageContext = New-AzStorageContext -StorageAccountName $(storageAccountName) -StorageAccountKey $(storageAccountAccessKey)
      $blob = Set-AzStorageBlobContent -Context $storageContext -Container $(storageContainerName) -File $sourceFilePath -Blob $destinationBlobName -Force

    azurePowerShellVersion: LatestVersion
